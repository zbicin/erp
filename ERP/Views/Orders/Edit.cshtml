@using System.Web.Mvc.Html
@using Newtonsoft.Json
@model ERP.ViewModels.OrderViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div ng-app="ERP" ng-controller="OrderEditController">

        <div class="form-horizontal">
            <h4>Order</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.CreatedAt, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" ng-model="order.CreatedAt" />
                    @Html.ValidationMessageFor(model => model.CreatedAt)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CompletedAt, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" ng-model="order.CompletedAt" />
                    @Html.ValidationMessageFor(model => model.CompletedAt)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShippedAt, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" ng-model="order.ShippedAt" />
                    @Html.ValidationMessageFor(model => model.ShippedAt)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeliveredAt, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="text" ng-model="order.DeliveredAt" />
                    @Html.ValidationMessageFor(model => model.DeliveredAt)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CanceledAt, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <input type="text" ng-model="order.CanceledAt"/>
                    @Html.ValidationMessageFor(model => model.CanceledAt)
                </div>
            </div>

            <div>
                <fieldset data-ng-repeat="choice in order.SelectedItems">
                    <select ng-model="choice.ItemName">
                        <option ng-repeat="item in items">{{item.Name}}</option>
                    </select>
                    <input type="number" ng-model="choice.Quantity" name="">
                    <button class="remove" ng-show="$last" ng-click="removeChoice()">-</button>
                </fieldset>
                <button class="addfields btn btn-default" ng-click="addNewChoice($event)">Add items</button>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button class="btn btn-default" ng-click="sendForm()">Save</button>
                </div>
            </div>
        </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/angular")
    <script>
            var order = @Html.Raw(JsonConvert.SerializeObject(Model, new JsonSerializerSettings() { ReferenceLoopHandling = ReferenceLoopHandling.Ignore}));
            app.value("order", order);
    </script>
}